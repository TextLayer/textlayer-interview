from app.services.llm.session import LLMSession
from flask import current_app as app
from app import logger

class SQLJudge:
    """"
    It reviews the sql querys which are generated by the llm brfore running them to ensure they are safe to execute.
    """
    def __init__(self):
        self.llm_session = LLMSession(
            chat_model=app.config.get("CHAT_MODEL"),
            embedding_model=app.config.get("EMBEDDING_MODEL"),
        )
    def review_sql(self, user_question,generated_sql,database_schema):
        judge_prompt = self._create_review_prompt(user_question, generated_sql, database_schema)
        try:
            response = self.llm_session.chat(messages=judge_prompt)
            review_result = response.choices[0].message.content
            decision = self._parse_judge_decision(review_result)
            
            logger.info(f"SQL Judge decision: {decision['verdict']}")
            return decision
        
        except Exception as e:
            logger.error(f"Error in SQL Judge: {e}")
            return {
                "verdict": "error",
                "reason": f"Error in SQL Judge: {e}",
                "suggested_sql" : generated_sql
            }

    def _create_review_prompt(self, user_question, generated_sql, schema):

        return[
            {
                "role": "system","content": """You are a SQL query review expert. Your task is to review the SQL query generated by the user and determine if it is safe to execute.
                
                Here is the query generated
                User asked:"{user_question}"
                the llm generated sql query:{generated_sql}
                here is the database schema for your reference
                database schema:{schema}

                So, you have to review the sql and tell:
                1. Is it safe to execute? (no dangerous sql like delete, update, drop, etc)
                2. Does it actually answer the user's question?
                3. Is the sql syntax correct?
                4. Any other issues with the sql?

                Respond in the below format:
                VERDICT: [APPROVED/REJECTED/NEEDS_IMPROVEMENT]
                REASON: [Brief explanation]
                SUGGESTED_FIX: [Better SQL if needed, or 'NONE' if original is fine]

                """
            },
            {
            "role": "user", "content": f"Please review this SQL query for the question '{user_question}': {generated_sql}"
            }
        ]
    
    def _parse_judge_decision(self, review_text):
        verdict = "approved"
        reason = "Review completed"
        suggested_sql = None
        lines = review_text.split('\n')
        for line in lines:
            line = line.strip()
            if line.startswith("VERDICT:"):
                verdict_text = line.replace('VERDICT:','').strip().lower()
                if 'rejected' in verdict_text:
                    verdict = "rejected"
                elif 'improvement' in verdict_text or 'improve' in verdict_text:
                    verdict = "needs_improvement"
                else:
                    verdict = "approved"
                    
            elif line.startswith('REASON:'):
                reason = line.replace('REASON:', '').strip()
                
            elif line.startswith('SUGGESTED_FIX:'):
                fix = line.replace('SUGGESTED_FIX:', '').strip()
                if fix != 'NONE' and fix != 'None':
                    suggested_sql = fix
        return{
            "verdict": verdict,
            "reason": reason,
            "suggested_sql": suggested_sql
        }